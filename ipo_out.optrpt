Intel(R) Advisor can now assist with vectorization and show optimization
  report messages with your source code.
See "https://software.intel.com/en-us/intel-advisor-xe" for details.

Intel(R) C Intel(R) 64 Compiler for applications running on Intel(R) 64, Version 19.1.3.304 Build 20200925_000000

Compiler options: -Ofast -fast -qopt-report=5 -qopt-report-phase=vec -Wall -std=c99 -lm -o d2q9-bgk

Begin optimization report for: main(int, char **)

    Report from: Vector optimizations [vec]


LOOP BEGIN at d2q9-bgk.c(201,3)
   remark #15382: vectorization support: call to function timestep_new_new(const t_param, t_speed_soa *__restrict__, t_speed_soa *__restrict__, int *__restrict__) cannot be vectorized   [ d2q9-bgk.c(204,5) ]
   remark #15382: vectorization support: call to function av_velocity(const t_param, t_speed_soa *__restrict__, int *) cannot be vectorized   [ d2q9-bgk.c(236,19) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
LOOP END
===========================================================================

Begin optimization report for: av_velocity(const t_param, t_speed_soa *__restrict__, int *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at d2q9-bgk.c(2930,3)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at d2q9-bgk.c(2932,5)
      remark #15388: vectorization support: reference cells->speed0[ii+jj*params.nx] has aligned access   [ d2q9-bgk.c(2940,26) ]
      remark #15388: vectorization support: reference cells->speed1[ii+jj*params.nx] has aligned access   [ d2q9-bgk.c(2941,26) ]
      remark #15388: vectorization support: reference cells->speed2[ii+jj*params.nx] has aligned access   [ d2q9-bgk.c(2942,26) ]
      remark #15388: vectorization support: reference cells->speed3[ii+jj*params.nx] has aligned access   [ d2q9-bgk.c(2943,26) ]
      remark #15388: vectorization support: reference cells->speed4[ii+jj*params.nx] has aligned access   [ d2q9-bgk.c(2944,26) ]
      remark #15388: vectorization support: reference cells->speed5[ii+jj*params.nx] has aligned access   [ d2q9-bgk.c(2945,26) ]
      remark #15388: vectorization support: reference cells->speed6[ii+jj*params.nx] has aligned access   [ d2q9-bgk.c(2946,26) ]
      remark #15388: vectorization support: reference cells->speed7[ii+jj*params.nx] has aligned access   [ d2q9-bgk.c(2947,26) ]
      remark #15388: vectorization support: reference cells->speed8[ii+jj*params.nx] has aligned access   [ d2q9-bgk.c(2948,26) ]
      remark #15388: vectorization support: reference cells->speed1[ii+jj*params.nx] has aligned access   [ d2q9-bgk.c(2951,22) ]
      remark #15388: vectorization support: reference cells->speed5[ii+jj*params.nx] has aligned access   [ d2q9-bgk.c(2952,25) ]
      remark #15388: vectorization support: reference cells->speed8[ii+jj*params.nx] has aligned access   [ d2q9-bgk.c(2953,25) ]
      remark #15388: vectorization support: reference cells->speed3[ii+jj*params.nx] has aligned access   [ d2q9-bgk.c(2954,26) ]
      remark #15388: vectorization support: reference cells->speed6[ii+jj*params.nx] has aligned access   [ d2q9-bgk.c(2955,28) ]
      remark #15388: vectorization support: reference cells->speed7[ii+jj*params.nx] has aligned access   [ d2q9-bgk.c(2956,28) ]
      remark #15388: vectorization support: reference cells->speed2[ii+jj*params.nx] has aligned access   [ d2q9-bgk.c(2959,22) ]
      remark #15388: vectorization support: reference cells->speed5[ii+jj*params.nx] has aligned access   [ d2q9-bgk.c(2960,25) ]
      remark #15388: vectorization support: reference cells->speed6[ii+jj*params.nx] has aligned access   [ d2q9-bgk.c(2961,25) ]
      remark #15388: vectorization support: reference cells->speed4[ii+jj*params.nx] has aligned access   [ d2q9-bgk.c(2962,26) ]
      remark #15388: vectorization support: reference cells->speed7[ii+jj*params.nx] has aligned access   [ d2q9-bgk.c(2963,28) ]
      remark #15388: vectorization support: reference cells->speed8[ii+jj*params.nx] has aligned access   [ d2q9-bgk.c(2964,28) ]
      remark #15305: vectorization support: vector length 8
      remark #15309: vectorization support: normalized vectorization overhead 0.047
      remark #15355: vectorization support: tot_u is float type reduction   [ d2q9-bgk.c(2905,3) ]
      remark #15355: vectorization support: tot_cells is int type reduction   [ d2q9-bgk.c(2901,20) ]
      remark #15300: LOOP WAS VECTORIZED
      remark #15450: unmasked unaligned unit stride loads: 1 
      remark #15454: masked aligned unit stride loads: 21 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 105 
      remark #15477: vector cost: 23.750 
      remark #15478: estimated potential speedup: 4.220 
      remark #15486: divides: 2 
      remark #15488: --- end vector cost summary ---
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: timestep_new_new(const t_param, t_speed_soa *__restrict__, t_speed_soa *__restrict__, int *__restrict__)

    Report from: Vector optimizations [vec]


LOOP BEGIN at d2q9-bgk.c(322,3)
   remark #15388: vectorization support: reference cells->speed1[ii+jj*params.nx] has aligned access   [ d2q9-bgk.c(332,7) ]
   remark #15388: vectorization support: reference cells->speed1[ii+jj*params.nx] has aligned access   [ d2q9-bgk.c(332,7) ]
   remark #15388: vectorization support: reference cells->speed5[ii+jj*params.nx] has aligned access   [ d2q9-bgk.c(333,7) ]
   remark #15388: vectorization support: reference cells->speed5[ii+jj*params.nx] has aligned access   [ d2q9-bgk.c(333,7) ]
   remark #15388: vectorization support: reference cells->speed8[ii+jj*params.nx] has aligned access   [ d2q9-bgk.c(334,7) ]
   remark #15388: vectorization support: reference cells->speed8[ii+jj*params.nx] has aligned access   [ d2q9-bgk.c(334,7) ]
   remark #15388: vectorization support: reference cells->speed3[ii+jj*params.nx] has aligned access   [ d2q9-bgk.c(336,7) ]
   remark #15388: vectorization support: reference cells->speed3[ii+jj*params.nx] has aligned access   [ d2q9-bgk.c(336,7) ]
   remark #15388: vectorization support: reference cells->speed6[ii+jj*params.nx] has aligned access   [ d2q9-bgk.c(337,7) ]
   remark #15388: vectorization support: reference cells->speed6[ii+jj*params.nx] has aligned access   [ d2q9-bgk.c(337,7) ]
   remark #15388: vectorization support: reference cells->speed7[ii+jj*params.nx] has aligned access   [ d2q9-bgk.c(338,7) ]
   remark #15388: vectorization support: reference cells->speed7[ii+jj*params.nx] has aligned access   [ d2q9-bgk.c(338,7) ]
   remark #15305: vectorization support: vector length 8
   remark #15309: vectorization support: normalized vectorization overhead 0.158
   remark #15300: LOOP WAS VECTORIZED
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15454: masked aligned unit stride loads: 9 
   remark #15455: masked aligned unit stride stores: 6 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 20 
   remark #15477: vector cost: 9.500 
   remark #15478: estimated potential speedup: 2.060 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at d2q9-bgk.c(432,5)
   remark #15389: vectorization support: reference d_equ[_2+5] has unaligned access
   remark #15389: vectorization support: reference u[_2+5] has unaligned access   [ d2q9-bgk.c(432,44) ]
   remark #15389: vectorization support: reference u[_2+5] has unaligned access   [ d2q9-bgk.c(433,42) ]
   remark #15389: vectorization support: reference u[_2+5] has unaligned access   [ d2q9-bgk.c(433,49) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 4
   remark #15427: loop was completely unrolled
   remark #15309: vectorization support: normalized vectorization overhead 0.091
   remark #15301: MATERIALIZED LOOP WAS VECTORIZED
   remark #15450: unmasked unaligned unit stride loads: 3 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 23 
   remark #15477: vector cost: 5.500 
   remark #15478: estimated potential speedup: 3.830 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at d2q9-bgk.c(488,3)
   remark #15389: vectorization support: reference tmp_cells->speed0[ii] has unaligned access   [ d2q9-bgk.c(499,5) ]
   remark #15389: vectorization support: reference cells->speed0[ii] has unaligned access   [ d2q9-bgk.c(499,44) ]
   remark #15389: vectorization support: reference tmp_cells->speed1[ii] has unaligned access   [ d2q9-bgk.c(500,5) ]
   remark #15389: vectorization support: reference cells->speed3[ii+1] has unaligned access   [ d2q9-bgk.c(500,44) ]
   remark #15389: vectorization support: reference tmp_cells->speed2[ii] has unaligned access   [ d2q9-bgk.c(501,5) ]
   remark #15389: vectorization support: reference cells->speed4[ii+params.nx] has unaligned access   [ d2q9-bgk.c(501,44) ]
   remark #15389: vectorization support: reference tmp_cells->speed3[ii] has unaligned access   [ d2q9-bgk.c(502,5) ]
   remark #15388: vectorization support: reference cells->speed1[ii-1] has aligned access   [ d2q9-bgk.c(502,44) ]
   remark #15389: vectorization support: reference tmp_cells->speed4[ii] has unaligned access   [ d2q9-bgk.c(503,5) ]
   remark #15389: vectorization support: reference cells->speed2[ii+y_s*params.nx] has unaligned access   [ d2q9-bgk.c(503,44) ]
   remark #15389: vectorization support: reference tmp_cells->speed5[ii] has unaligned access   [ d2q9-bgk.c(504,5) ]
   remark #15389: vectorization support: reference cells->speed7[ii+1+params.nx] has unaligned access   [ d2q9-bgk.c(504,44) ]
   remark #15389: vectorization support: reference tmp_cells->speed6[ii] has unaligned access   [ d2q9-bgk.c(505,5) ]
   remark #15388: vectorization support: reference cells->speed8[ii-1+params.nx] has aligned access   [ d2q9-bgk.c(505,44) ]
   remark #15389: vectorization support: reference tmp_cells->speed7[ii] has unaligned access   [ d2q9-bgk.c(506,5) ]
   remark #15388: vectorization support: reference cells->speed5[ii-1+y_s*params.nx] has aligned access   [ d2q9-bgk.c(506,44) ]
   remark #15389: vectorization support: reference tmp_cells->speed8[ii] has unaligned access   [ d2q9-bgk.c(507,5) ]
   remark #15389: vectorization support: reference cells->speed6[ii+1+y_s*params.nx] has unaligned access   [ d2q9-bgk.c(507,44) ]
   remark #15389: vectorization support: reference cells->speed0[ii] has unaligned access   [ d2q9-bgk.c(517,22) ]
   remark #15388: vectorization support: reference cells->speed1[ii-1] has aligned access   [ d2q9-bgk.c(518,22) ]
   remark #15389: vectorization support: reference cells->speed2[ii+y_s*params.nx] has unaligned access   [ d2q9-bgk.c(519,22) ]
   remark #15389: vectorization support: reference cells->speed3[ii+1] has unaligned access   [ d2q9-bgk.c(520,22) ]
   remark #15389: vectorization support: reference cells->speed4[ii+params.nx] has unaligned access   [ d2q9-bgk.c(521,22) ]
   remark #15388: vectorization support: reference cells->speed5[ii-1+y_s*params.nx] has aligned access   [ d2q9-bgk.c(522,22) ]
   remark #15389: vectorization support: reference cells->speed6[ii+1+y_s*params.nx] has unaligned access   [ d2q9-bgk.c(523,22) ]
   remark #15389: vectorization support: reference cells->speed7[ii+1+params.nx] has unaligned access   [ d2q9-bgk.c(524,22) ]
   remark #15388: vectorization support: reference cells->speed8[ii-1+params.nx] has aligned access   [ d2q9-bgk.c(525,22) ]
   remark #15388: vectorization support: reference cells->speed1[ii-1] has aligned access   [ d2q9-bgk.c(529,18) ]
   remark #15388: vectorization support: reference cells->speed5[ii-1+y_s*params.nx] has aligned access   [ d2q9-bgk.c(530,21) ]
   remark #15388: vectorization support: reference cells->speed8[ii-1+params.nx] has aligned access   [ d2q9-bgk.c(531,21) ]
   remark #15389: vectorization support: reference cells->speed3[ii+1] has unaligned access   [ d2q9-bgk.c(532,22) ]
   remark #15389: vectorization support: reference cells->speed6[ii+1+y_s*params.nx] has unaligned access   [ d2q9-bgk.c(533,25) ]
   remark #15389: vectorization support: reference cells->speed7[ii+1+params.nx] has unaligned access   [ d2q9-bgk.c(534,25) ]
   remark #15389: vectorization support: reference cells->speed2[ii+y_s*params.nx] has unaligned access   [ d2q9-bgk.c(537,18) ]
   remark #15388: vectorization support: reference cells->speed5[ii-1+y_s*params.nx] has aligned access   [ d2q9-bgk.c(538,21) ]
   remark #15389: vectorization support: reference cells->speed6[ii+1+y_s*params.nx] has unaligned access   [ d2q9-bgk.c(539,21) ]
   remark #15389: vectorization support: reference cells->speed4[ii+params.nx] has unaligned access   [ d2q9-bgk.c(540,22) ]
   remark #15389: vectorization support: reference cells->speed7[ii+1+params.nx] has unaligned access   [ d2q9-bgk.c(541,25) ]
   remark #15388: vectorization support: reference cells->speed8[ii-1+params.nx] has aligned access   [ d2q9-bgk.c(542,25) ]
   remark #15389: vectorization support: reference tmp_cells->speed0[ii] has unaligned access   [ d2q9-bgk.c(593,5) ]
   remark #15389: vectorization support: reference cells->speed0[ii] has unaligned access   [ d2q9-bgk.c(593,44) ]
   remark #15389: vectorization support: reference cells->speed0[ii] has unaligned access   [ d2q9-bgk.c(595,61) ]
   remark #15389: vectorization support: reference tmp_cells->speed1[ii] has unaligned access   [ d2q9-bgk.c(597,5) ]
   remark #15388: vectorization support: reference cells->speed1[ii-1] has aligned access   [ d2q9-bgk.c(597,44) ]
   remark #15388: vectorization support: reference cells->speed1[ii-1] has aligned access   [ d2q9-bgk.c(599,61) ]
   remark #15389: vectorization support: reference tmp_cells->speed2[ii] has unaligned access   [ d2q9-bgk.c(601,5) ]
   remark #15389: vectorization support: reference cells->speed2[ii+y_s*params.nx] has unaligned access   [ d2q9-bgk.c(601,44) ]
   remark #15389: vectorization support: reference cells->speed2[ii+y_s*params.nx] has unaligned access   [ d2q9-bgk.c(603,61) ]
   remark #15389: vectorization support: reference tmp_cells->speed3[ii] has unaligned access   [ d2q9-bgk.c(605,5) ]
   remark #15389: vectorization support: reference cells->speed3[ii+1] has unaligned access   [ d2q9-bgk.c(605,44) ]
   remark #15389: vectorization support: reference cells->speed3[ii+1] has unaligned access   [ d2q9-bgk.c(607,61) ]
   remark #15389: vectorization support: reference tmp_cells->speed4[ii] has unaligned access   [ d2q9-bgk.c(609,5) ]
   remark #15389: vectorization support: reference cells->speed4[ii+params.nx] has unaligned access   [ d2q9-bgk.c(609,44) ]
   remark #15389: vectorization support: reference cells->speed4[ii+params.nx] has unaligned access   [ d2q9-bgk.c(611,61) ]
   remark #15389: vectorization support: reference tmp_cells->speed5[ii] has unaligned access   [ d2q9-bgk.c(613,5) ]
   remark #15388: vectorization support: reference cells->speed5[ii-1+y_s*params.nx] has aligned access   [ d2q9-bgk.c(613,44) ]
   remark #15388: vectorization support: reference cells->speed5[ii-1+y_s*params.nx] has aligned access   [ d2q9-bgk.c(615,61) ]
   remark #15389: vectorization support: reference tmp_cells->speed6[ii] has unaligned access   [ d2q9-bgk.c(617,5) ]
   remark #15389: vectorization support: reference cells->speed6[ii+1+y_s*params.nx] has unaligned access   [ d2q9-bgk.c(617,44) ]
   remark #15389: vectorization support: reference cells->speed6[ii+1+y_s*params.nx] has unaligned access   [ d2q9-bgk.c(619,61) ]
   remark #15389: vectorization support: reference tmp_cells->speed7[ii] has unaligned access   [ d2q9-bgk.c(621,5) ]
   remark #15389: vectorization support: reference cells->speed7[ii+1+params.nx] has unaligned access   [ d2q9-bgk.c(621,44) ]
   remark #15389: vectorization support: reference cells->speed7[ii+1+params.nx] has unaligned access   [ d2q9-bgk.c(623,61) ]
   remark #15389: vectorization support: reference tmp_cells->speed8[ii] has unaligned access   [ d2q9-bgk.c(625,5) ]
   remark #15388: vectorization support: reference cells->speed8[ii-1+params.nx] has aligned access   [ d2q9-bgk.c(625,44) ]
   remark #15388: vectorization support: reference cells->speed8[ii-1+params.nx] has aligned access   [ d2q9-bgk.c(627,61) ]
   remark #15389: vectorization support: reference tmp_cells->speed0[ii] has unaligned access   [ d2q9-bgk.c(499,5) ]
   remark #15389: vectorization support: reference tmp_cells->speed1[ii] has unaligned access   [ d2q9-bgk.c(500,5) ]
   remark #15389: vectorization support: reference tmp_cells->speed2[ii] has unaligned access   [ d2q9-bgk.c(501,5) ]
   remark #15389: vectorization support: reference tmp_cells->speed3[ii] has unaligned access   [ d2q9-bgk.c(502,5) ]
   remark #15389: vectorization support: reference tmp_cells->speed4[ii] has unaligned access   [ d2q9-bgk.c(503,5) ]
   remark #15389: vectorization support: reference tmp_cells->speed5[ii] has unaligned access   [ d2q9-bgk.c(504,5) ]
   remark #15389: vectorization support: reference tmp_cells->speed6[ii] has unaligned access   [ d2q9-bgk.c(505,5) ]
   remark #15389: vectorization support: reference tmp_cells->speed7[ii] has unaligned access   [ d2q9-bgk.c(506,5) ]
   remark #15389: vectorization support: reference tmp_cells->speed8[ii] has unaligned access   [ d2q9-bgk.c(507,5) ]
   remark #15389: vectorization support: reference tmp_cells->speed0[ii] has unaligned access   [ d2q9-bgk.c(593,5) ]
   remark #15389: vectorization support: reference tmp_cells->speed1[ii] has unaligned access   [ d2q9-bgk.c(597,5) ]
   remark #15389: vectorization support: reference tmp_cells->speed2[ii] has unaligned access   [ d2q9-bgk.c(601,5) ]
   remark #15389: vectorization support: reference tmp_cells->speed3[ii] has unaligned access   [ d2q9-bgk.c(605,5) ]
   remark #15389: vectorization support: reference tmp_cells->speed4[ii] has unaligned access   [ d2q9-bgk.c(609,5) ]
   remark #15389: vectorization support: reference tmp_cells->speed5[ii] has unaligned access   [ d2q9-bgk.c(613,5) ]
   remark #15389: vectorization support: reference tmp_cells->speed6[ii] has unaligned access   [ d2q9-bgk.c(617,5) ]
   remark #15389: vectorization support: reference tmp_cells->speed7[ii] has unaligned access   [ d2q9-bgk.c(621,5) ]
   remark #15389: vectorization support: reference tmp_cells->speed8[ii] has unaligned access   [ d2q9-bgk.c(625,5) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 8
   remark #15309: vectorization support: normalized vectorization overhead 0.113
   remark #15301: SIMD LOOP WAS VECTORIZED
   remark #15448: unmasked aligned unit stride loads: 17 
   remark #15450: unmasked unaligned unit stride loads: 45 
   remark #15451: unmasked unaligned unit stride stores: 18 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 257 
   remark #15477: vector cost: 77.250 
   remark #15478: estimated potential speedup: 3.210 
   remark #15486: divides: 2 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at d2q9-bgk.c(488,3)
<Remainder loop for vectorization>
LOOP END

LOOP BEGIN at d2q9-bgk.c(718,5)
   remark #15389: vectorization support: reference d_equ[_2+5] has unaligned access
   remark #15389: vectorization support: reference u[_2+5] has unaligned access   [ d2q9-bgk.c(718,44) ]
   remark #15389: vectorization support: reference u[_2+5] has unaligned access   [ d2q9-bgk.c(719,42) ]
   remark #15389: vectorization support: reference u[_2+5] has unaligned access   [ d2q9-bgk.c(719,49) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 4
   remark #15427: loop was completely unrolled
   remark #15309: vectorization support: normalized vectorization overhead 0.091
   remark #15301: MATERIALIZED LOOP WAS VECTORIZED
   remark #15450: unmasked unaligned unit stride loads: 3 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 23 
   remark #15477: vector cost: 5.500 
   remark #15478: estimated potential speedup: 3.830 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at d2q9-bgk.c(774,3)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at d2q9-bgk.c(921,5)
      remark #15389: vectorization support: reference tmp_cells->speed0[ii+jj*params.nx] has unaligned access   [ d2q9-bgk.c(932,5) ]
      remark #15389: vectorization support: reference cells->speed0[ii+jj*params.nx] has unaligned access   [ d2q9-bgk.c(932,44) ]
      remark #15389: vectorization support: reference tmp_cells->speed1[ii+jj*params.nx] has unaligned access   [ d2q9-bgk.c(933,5) ]
      remark #15389: vectorization support: reference cells->speed3[ii+1+jj*params.nx] has unaligned access   [ d2q9-bgk.c(933,44) ]
      remark #15389: vectorization support: reference tmp_cells->speed2[ii+jj*params.nx] has unaligned access   [ d2q9-bgk.c(934,5) ]
      remark #15389: vectorization support: reference cells->speed4[ii+(jj+1)*params.nx] has unaligned access   [ d2q9-bgk.c(934,44) ]
      remark #15389: vectorization support: reference tmp_cells->speed3[ii+jj*params.nx] has unaligned access   [ d2q9-bgk.c(935,5) ]
      remark #15388: vectorization support: reference cells->speed1[ii-1+jj*params.nx] has aligned access   [ d2q9-bgk.c(935,44) ]
      remark #15389: vectorization support: reference tmp_cells->speed4[ii+jj*params.nx] has unaligned access   [ d2q9-bgk.c(936,5) ]
      remark #15389: vectorization support: reference cells->speed2[ii+(jj-1)*params.nx] has unaligned access   [ d2q9-bgk.c(936,44) ]
      remark #15389: vectorization support: reference tmp_cells->speed5[ii+jj*params.nx] has unaligned access   [ d2q9-bgk.c(937,5) ]
      remark #15389: vectorization support: reference cells->speed7[ii+1+(jj+1)*params.nx] has unaligned access   [ d2q9-bgk.c(937,44) ]
      remark #15389: vectorization support: reference tmp_cells->speed6[ii+jj*params.nx] has unaligned access   [ d2q9-bgk.c(938,5) ]
      remark #15388: vectorization support: reference cells->speed8[ii-1+(jj+1)*params.nx] has aligned access   [ d2q9-bgk.c(938,44) ]
      remark #15389: vectorization support: reference tmp_cells->speed7[ii+jj*params.nx] has unaligned access   [ d2q9-bgk.c(939,5) ]
      remark #15388: vectorization support: reference cells->speed5[ii-1+(jj-1)*params.nx] has aligned access   [ d2q9-bgk.c(939,44) ]
      remark #15389: vectorization support: reference tmp_cells->speed8[ii+jj*params.nx] has unaligned access   [ d2q9-bgk.c(940,5) ]
      remark #15389: vectorization support: reference cells->speed6[ii+1+(jj-1)*params.nx] has unaligned access   [ d2q9-bgk.c(940,44) ]
      remark #15389: vectorization support: reference cells->speed0[ii+jj*params.nx] has unaligned access   [ d2q9-bgk.c(950,22) ]
      remark #15388: vectorization support: reference cells->speed1[ii-1+jj*params.nx] has aligned access   [ d2q9-bgk.c(951,22) ]
      remark #15389: vectorization support: reference cells->speed2[ii+(jj-1)*params.nx] has unaligned access   [ d2q9-bgk.c(952,22) ]
      remark #15389: vectorization support: reference cells->speed3[ii+1+jj*params.nx] has unaligned access   [ d2q9-bgk.c(953,22) ]
      remark #15389: vectorization support: reference cells->speed4[ii+(jj+1)*params.nx] has unaligned access   [ d2q9-bgk.c(954,22) ]
      remark #15388: vectorization support: reference cells->speed5[ii-1+(jj-1)*params.nx] has aligned access   [ d2q9-bgk.c(955,22) ]
      remark #15389: vectorization support: reference cells->speed6[ii+1+(jj-1)*params.nx] has unaligned access   [ d2q9-bgk.c(956,22) ]
      remark #15389: vectorization support: reference cells->speed7[ii+1+(jj+1)*params.nx] has unaligned access   [ d2q9-bgk.c(957,22) ]
      remark #15388: vectorization support: reference cells->speed8[ii-1+(jj+1)*params.nx] has aligned access   [ d2q9-bgk.c(958,22) ]
      remark #15388: vectorization support: reference cells->speed1[ii-1+jj*params.nx] has aligned access   [ d2q9-bgk.c(962,18) ]
      remark #15388: vectorization support: reference cells->speed5[ii-1+(jj-1)*params.nx] has aligned access   [ d2q9-bgk.c(963,21) ]
      remark #15388: vectorization support: reference cells->speed8[ii-1+(jj+1)*params.nx] has aligned access   [ d2q9-bgk.c(964,21) ]
      remark #15389: vectorization support: reference cells->speed3[ii+1+jj*params.nx] has unaligned access   [ d2q9-bgk.c(965,22) ]
      remark #15389: vectorization support: reference cells->speed6[ii+1+(jj-1)*params.nx] has unaligned access   [ d2q9-bgk.c(966,25) ]
      remark #15389: vectorization support: reference cells->speed7[ii+1+(jj+1)*params.nx] has unaligned access   [ d2q9-bgk.c(967,25) ]
      remark #15389: vectorization support: reference cells->speed2[ii+(jj-1)*params.nx] has unaligned access   [ d2q9-bgk.c(970,18) ]
      remark #15388: vectorization support: reference cells->speed5[ii-1+(jj-1)*params.nx] has aligned access   [ d2q9-bgk.c(971,21) ]
      remark #15389: vectorization support: reference cells->speed6[ii+1+(jj-1)*params.nx] has unaligned access   [ d2q9-bgk.c(972,21) ]
      remark #15389: vectorization support: reference cells->speed4[ii+(jj+1)*params.nx] has unaligned access   [ d2q9-bgk.c(973,22) ]
      remark #15389: vectorization support: reference cells->speed7[ii+1+(jj+1)*params.nx] has unaligned access   [ d2q9-bgk.c(974,25) ]
      remark #15388: vectorization support: reference cells->speed8[ii-1+(jj+1)*params.nx] has aligned access   [ d2q9-bgk.c(975,25) ]
      remark #15389: vectorization support: reference tmp_cells->speed0[ii+jj*params.nx] has unaligned access   [ d2q9-bgk.c(1026,5) ]
      remark #15389: vectorization support: reference cells->speed0[ii+jj*params.nx] has unaligned access   [ d2q9-bgk.c(1026,44) ]
      remark #15389: vectorization support: reference cells->speed0[ii+jj*params.nx] has unaligned access   [ d2q9-bgk.c(1028,61) ]
      remark #15389: vectorization support: reference tmp_cells->speed1[ii+jj*params.nx] has unaligned access   [ d2q9-bgk.c(1030,5) ]
      remark #15388: vectorization support: reference cells->speed1[ii-1+jj*params.nx] has aligned access   [ d2q9-bgk.c(1030,44) ]
      remark #15388: vectorization support: reference cells->speed1[ii-1+jj*params.nx] has aligned access   [ d2q9-bgk.c(1032,61) ]
      remark #15389: vectorization support: reference tmp_cells->speed2[ii+jj*params.nx] has unaligned access   [ d2q9-bgk.c(1034,5) ]
      remark #15389: vectorization support: reference cells->speed2[ii+(jj-1)*params.nx] has unaligned access   [ d2q9-bgk.c(1034,44) ]
      remark #15389: vectorization support: reference cells->speed2[ii+(jj-1)*params.nx] has unaligned access   [ d2q9-bgk.c(1036,61) ]
      remark #15389: vectorization support: reference tmp_cells->speed3[ii+jj*params.nx] has unaligned access   [ d2q9-bgk.c(1038,5) ]
      remark #15389: vectorization support: reference cells->speed3[ii+1+jj*params.nx] has unaligned access   [ d2q9-bgk.c(1038,44) ]
      remark #15389: vectorization support: reference cells->speed3[ii+1+jj*params.nx] has unaligned access   [ d2q9-bgk.c(1040,61) ]
      remark #15389: vectorization support: reference tmp_cells->speed4[ii+jj*params.nx] has unaligned access   [ d2q9-bgk.c(1042,5) ]
      remark #15389: vectorization support: reference cells->speed4[ii+(jj+1)*params.nx] has unaligned access   [ d2q9-bgk.c(1042,44) ]
      remark #15389: vectorization support: reference cells->speed4[ii+(jj+1)*params.nx] has unaligned access   [ d2q9-bgk.c(1044,61) ]
      remark #15389: vectorization support: reference tmp_cells->speed5[ii+jj*params.nx] has unaligned access   [ d2q9-bgk.c(1046,5) ]
      remark #15388: vectorization support: reference cells->speed5[ii-1+(jj-1)*params.nx] has aligned access   [ d2q9-bgk.c(1046,44) ]
      remark #15388: vectorization support: reference cells->speed5[ii-1+(jj-1)*params.nx] has aligned access   [ d2q9-bgk.c(1048,61) ]
      remark #15389: vectorization support: reference tmp_cells->speed6[ii+jj*params.nx] has unaligned access   [ d2q9-bgk.c(1050,5) ]
      remark #15389: vectorization support: reference cells->speed6[ii+1+(jj-1)*params.nx] has unaligned access   [ d2q9-bgk.c(1050,44) ]
      remark #15389: vectorization support: reference cells->speed6[ii+1+(jj-1)*params.nx] has unaligned access   [ d2q9-bgk.c(1052,61) ]
      remark #15389: vectorization support: reference tmp_cells->speed7[ii+jj*params.nx] has unaligned access   [ d2q9-bgk.c(1054,5) ]
      remark #15389: vectorization support: reference cells->speed7[ii+1+(jj+1)*params.nx] has unaligned access   [ d2q9-bgk.c(1054,44) ]
      remark #15389: vectorization support: reference cells->speed7[ii+1+(jj+1)*params.nx] has unaligned access   [ d2q9-bgk.c(1056,61) ]
      remark #15389: vectorization support: reference tmp_cells->speed8[ii+jj*params.nx] has unaligned access   [ d2q9-bgk.c(1058,5) ]
      remark #15388: vectorization support: reference cells->speed8[ii-1+(jj+1)*params.nx] has aligned access   [ d2q9-bgk.c(1058,44) ]
      remark #15388: vectorization support: reference cells->speed8[ii-1+(jj+1)*params.nx] has aligned access   [ d2q9-bgk.c(1060,61) ]
      remark #15389: vectorization support: reference tmp_cells->speed0[ii+jj*params.nx] has unaligned access   [ d2q9-bgk.c(932,5) ]
      remark #15389: vectorization support: reference tmp_cells->speed1[ii+jj*params.nx] has unaligned access   [ d2q9-bgk.c(933,5) ]
      remark #15389: vectorization support: reference tmp_cells->speed2[ii+jj*params.nx] has unaligned access   [ d2q9-bgk.c(934,5) ]
      remark #15389: vectorization support: reference tmp_cells->speed3[ii+jj*params.nx] has unaligned access   [ d2q9-bgk.c(935,5) ]
      remark #15389: vectorization support: reference tmp_cells->speed4[ii+jj*params.nx] has unaligned access   [ d2q9-bgk.c(936,5) ]
      remark #15389: vectorization support: reference tmp_cells->speed5[ii+jj*params.nx] has unaligned access   [ d2q9-bgk.c(937,5) ]
      remark #15389: vectorization support: reference tmp_cells->speed6[ii+jj*params.nx] has unaligned access   [ d2q9-bgk.c(938,5) ]
      remark #15389: vectorization support: reference tmp_cells->speed7[ii+jj*params.nx] has unaligned access   [ d2q9-bgk.c(939,5) ]
      remark #15389: vectorization support: reference tmp_cells->speed8[ii+jj*params.nx] has unaligned access   [ d2q9-bgk.c(940,5) ]
      remark #15389: vectorization support: reference tmp_cells->speed0[ii+jj*params.nx] has unaligned access   [ d2q9-bgk.c(1026,5) ]
      remark #15389: vectorization support: reference tmp_cells->speed1[ii+jj*params.nx] has unaligned access   [ d2q9-bgk.c(1030,5) ]
      remark #15389: vectorization support: reference tmp_cells->speed2[ii+jj*params.nx] has unaligned access   [ d2q9-bgk.c(1034,5) ]
      remark #15389: vectorization support: reference tmp_cells->speed3[ii+jj*params.nx] has unaligned access   [ d2q9-bgk.c(1038,5) ]
      remark #15389: vectorization support: reference tmp_cells->speed4[ii+jj*params.nx] has unaligned access   [ d2q9-bgk.c(1042,5) ]
      remark #15389: vectorization support: reference tmp_cells->speed5[ii+jj*params.nx] has unaligned access   [ d2q9-bgk.c(1046,5) ]
      remark #15389: vectorization support: reference tmp_cells->speed6[ii+jj*params.nx] has unaligned access   [ d2q9-bgk.c(1050,5) ]
      remark #15389: vectorization support: reference tmp_cells->speed7[ii+jj*params.nx] has unaligned access   [ d2q9-bgk.c(1054,5) ]
      remark #15389: vectorization support: reference tmp_cells->speed8[ii+jj*params.nx] has unaligned access   [ d2q9-bgk.c(1058,5) ]
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15305: vectorization support: vector length 8
      remark #15309: vectorization support: normalized vectorization overhead 0.113
      remark #15301: SIMD LOOP WAS VECTORIZED
      remark #15448: unmasked aligned unit stride loads: 17 
      remark #15450: unmasked unaligned unit stride loads: 49 
      remark #15451: unmasked unaligned unit stride stores: 18 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 257 
      remark #15477: vector cost: 77.750 
      remark #15478: estimated potential speedup: 3.190 
      remark #15486: divides: 2 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at d2q9-bgk.c(921,5)
   <Remainder loop for vectorization>
   LOOP END

   LOOP BEGIN at d2q9-bgk.c(864,5)
      remark #15389: vectorization support: reference d_equ[_2+5] has unaligned access
      remark #15389: vectorization support: reference u[_2+5] has unaligned access   [ d2q9-bgk.c(864,44) ]
      remark #15389: vectorization support: reference u[_2+5] has unaligned access   [ d2q9-bgk.c(865,42) ]
      remark #15389: vectorization support: reference u[_2+5] has unaligned access   [ d2q9-bgk.c(865,49) ]
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15305: vectorization support: vector length 4
      remark #15427: loop was completely unrolled
      remark #15309: vectorization support: normalized vectorization overhead 0.909
      remark #15301: MATERIALIZED LOOP WAS VECTORIZED
      remark #15450: unmasked unaligned unit stride loads: 3 
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 23 
      remark #15477: vector cost: 5.500 
      remark #15478: estimated potential speedup: 2.190 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at d2q9-bgk.c(1151,5)
      remark #15389: vectorization support: reference d_equ[_2+5] has unaligned access
      remark #15389: vectorization support: reference u[_2+5] has unaligned access   [ d2q9-bgk.c(1151,44) ]
      remark #15389: vectorization support: reference u[_2+5] has unaligned access   [ d2q9-bgk.c(1152,42) ]
      remark #15389: vectorization support: reference u[_2+5] has unaligned access   [ d2q9-bgk.c(1152,49) ]
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15305: vectorization support: vector length 4
      remark #15427: loop was completely unrolled
      remark #15309: vectorization support: normalized vectorization overhead 0.909
      remark #15301: MATERIALIZED LOOP WAS VECTORIZED
      remark #15450: unmasked unaligned unit stride loads: 3 
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 23 
      remark #15477: vector cost: 5.500 
      remark #15478: estimated potential speedup: 2.190 
      remark #15488: --- end vector cost summary ---
   LOOP END
LOOP END

LOOP BEGIN at d2q9-bgk.c(1299,5)
   remark #15389: vectorization support: reference d_equ[_2+5] has unaligned access
   remark #15389: vectorization support: reference u[_2+5] has unaligned access   [ d2q9-bgk.c(1299,44) ]
   remark #15389: vectorization support: reference u[_2+5] has unaligned access   [ d2q9-bgk.c(1300,42) ]
   remark #15389: vectorization support: reference u[_2+5] has unaligned access   [ d2q9-bgk.c(1300,49) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 4
   remark #15427: loop was completely unrolled
   remark #15309: vectorization support: normalized vectorization overhead 0.091
   remark #15301: MATERIALIZED LOOP WAS VECTORIZED
   remark #15450: unmasked unaligned unit stride loads: 3 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 23 
   remark #15477: vector cost: 5.500 
   remark #15478: estimated potential speedup: 3.830 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at d2q9-bgk.c(1355,3)
   remark #15389: vectorization support: reference tmp_cells->speed0[ii+jj*params.nx] has unaligned access   [ d2q9-bgk.c(1366,5) ]
   remark #15389: vectorization support: reference cells->speed0[ii+jj*params.nx] has unaligned access   [ d2q9-bgk.c(1366,44) ]
   remark #15389: vectorization support: reference tmp_cells->speed1[ii+jj*params.nx] has unaligned access   [ d2q9-bgk.c(1367,5) ]
   remark #15389: vectorization support: reference cells->speed3[ii+1+jj*params.nx] has unaligned access   [ d2q9-bgk.c(1367,44) ]
   remark #15389: vectorization support: reference tmp_cells->speed2[ii+jj*params.nx] has unaligned access   [ d2q9-bgk.c(1368,5) ]
   remark #15389: vectorization support: reference cells->speed4[ii+(jj+1)*params.nx] has unaligned access   [ d2q9-bgk.c(1368,44) ]
   remark #15389: vectorization support: reference tmp_cells->speed3[ii+jj*params.nx] has unaligned access   [ d2q9-bgk.c(1369,5) ]
   remark #15388: vectorization support: reference cells->speed1[ii-1+jj*params.nx] has aligned access   [ d2q9-bgk.c(1369,44) ]
   remark #15389: vectorization support: reference tmp_cells->speed4[ii+jj*params.nx] has unaligned access   [ d2q9-bgk.c(1370,5) ]
   remark #15389: vectorization support: reference cells->speed2[ii+(jj-1)*params.nx] has unaligned access   [ d2q9-bgk.c(1370,44) ]
   remark #15389: vectorization support: reference tmp_cells->speed5[ii+jj*params.nx] has unaligned access   [ d2q9-bgk.c(1371,5) ]
   remark #15389: vectorization support: reference cells->speed7[ii+1+(jj+1)*params.nx] has unaligned access   [ d2q9-bgk.c(1371,44) ]
   remark #15389: vectorization support: reference tmp_cells->speed6[ii+jj*params.nx] has unaligned access   [ d2q9-bgk.c(1372,5) ]
   remark #15388: vectorization support: reference cells->speed8[ii-1+(jj+1)*params.nx] has aligned access   [ d2q9-bgk.c(1372,44) ]
   remark #15389: vectorization support: reference tmp_cells->speed7[ii+jj*params.nx] has unaligned access   [ d2q9-bgk.c(1373,5) ]
   remark #15388: vectorization support: reference cells->speed5[ii-1+(jj-1)*params.nx] has aligned access   [ d2q9-bgk.c(1373,44) ]
   remark #15389: vectorization support: reference tmp_cells->speed8[ii+jj*params.nx] has unaligned access   [ d2q9-bgk.c(1374,5) ]
   remark #15389: vectorization support: reference cells->speed6[ii+1+(jj-1)*params.nx] has unaligned access   [ d2q9-bgk.c(1374,44) ]
   remark #15389: vectorization support: reference cells->speed0[ii+jj*params.nx] has unaligned access   [ d2q9-bgk.c(1384,22) ]
   remark #15388: vectorization support: reference cells->speed1[ii-1+jj*params.nx] has aligned access   [ d2q9-bgk.c(1385,22) ]
   remark #15389: vectorization support: reference cells->speed2[ii+(jj-1)*params.nx] has unaligned access   [ d2q9-bgk.c(1386,22) ]
   remark #15389: vectorization support: reference cells->speed3[ii+1+jj*params.nx] has unaligned access   [ d2q9-bgk.c(1387,22) ]
   remark #15389: vectorization support: reference cells->speed4[ii+(jj+1)*params.nx] has unaligned access   [ d2q9-bgk.c(1388,22) ]
   remark #15388: vectorization support: reference cells->speed5[ii-1+(jj-1)*params.nx] has aligned access   [ d2q9-bgk.c(1389,22) ]
   remark #15389: vectorization support: reference cells->speed6[ii+1+(jj-1)*params.nx] has unaligned access   [ d2q9-bgk.c(1390,22) ]
   remark #15389: vectorization support: reference cells->speed7[ii+1+(jj+1)*params.nx] has unaligned access   [ d2q9-bgk.c(1391,22) ]
   remark #15388: vectorization support: reference cells->speed8[ii-1+(jj+1)*params.nx] has aligned access   [ d2q9-bgk.c(1392,22) ]
   remark #15388: vectorization support: reference cells->speed1[ii-1+jj*params.nx] has aligned access   [ d2q9-bgk.c(1396,18) ]
   remark #15388: vectorization support: reference cells->speed5[ii-1+(jj-1)*params.nx] has aligned access   [ d2q9-bgk.c(1397,21) ]
   remark #15388: vectorization support: reference cells->speed8[ii-1+(jj+1)*params.nx] has aligned access   [ d2q9-bgk.c(1398,21) ]
   remark #15389: vectorization support: reference cells->speed3[ii+1+jj*params.nx] has unaligned access   [ d2q9-bgk.c(1399,22) ]
   remark #15389: vectorization support: reference cells->speed6[ii+1+(jj-1)*params.nx] has unaligned access   [ d2q9-bgk.c(1400,25) ]
   remark #15389: vectorization support: reference cells->speed7[ii+1+(jj+1)*params.nx] has unaligned access   [ d2q9-bgk.c(1401,25) ]
   remark #15389: vectorization support: reference cells->speed2[ii+(jj-1)*params.nx] has unaligned access   [ d2q9-bgk.c(1404,18) ]
   remark #15388: vectorization support: reference cells->speed5[ii-1+(jj-1)*params.nx] has aligned access   [ d2q9-bgk.c(1405,21) ]
   remark #15389: vectorization support: reference cells->speed6[ii+1+(jj-1)*params.nx] has unaligned access   [ d2q9-bgk.c(1406,21) ]
   remark #15389: vectorization support: reference cells->speed4[ii+(jj+1)*params.nx] has unaligned access   [ d2q9-bgk.c(1407,22) ]
   remark #15389: vectorization support: reference cells->speed7[ii+1+(jj+1)*params.nx] has unaligned access   [ d2q9-bgk.c(1408,25) ]
   remark #15388: vectorization support: reference cells->speed8[ii-1+(jj+1)*params.nx] has aligned access   [ d2q9-bgk.c(1409,25) ]
   remark #15389: vectorization support: reference tmp_cells->speed0[ii+jj*params.nx] has unaligned access   [ d2q9-bgk.c(1460,5) ]
   remark #15389: vectorization support: reference cells->speed0[ii+jj*params.nx] has unaligned access   [ d2q9-bgk.c(1460,44) ]
   remark #15389: vectorization support: reference cells->speed0[ii+jj*params.nx] has unaligned access   [ d2q9-bgk.c(1462,61) ]
   remark #15389: vectorization support: reference tmp_cells->speed1[ii+jj*params.nx] has unaligned access   [ d2q9-bgk.c(1464,5) ]
   remark #15388: vectorization support: reference cells->speed1[ii-1+jj*params.nx] has aligned access   [ d2q9-bgk.c(1464,44) ]
   remark #15388: vectorization support: reference cells->speed1[ii-1+jj*params.nx] has aligned access   [ d2q9-bgk.c(1466,61) ]
   remark #15389: vectorization support: reference tmp_cells->speed2[ii+jj*params.nx] has unaligned access   [ d2q9-bgk.c(1468,5) ]
   remark #15389: vectorization support: reference cells->speed2[ii+(jj-1)*params.nx] has unaligned access   [ d2q9-bgk.c(1468,44) ]
   remark #15389: vectorization support: reference cells->speed2[ii+(jj-1)*params.nx] has unaligned access   [ d2q9-bgk.c(1470,61) ]
   remark #15389: vectorization support: reference tmp_cells->speed3[ii+jj*params.nx] has unaligned access   [ d2q9-bgk.c(1472,5) ]
   remark #15389: vectorization support: reference cells->speed3[ii+1+jj*params.nx] has unaligned access   [ d2q9-bgk.c(1472,44) ]
   remark #15389: vectorization support: reference cells->speed3[ii+1+jj*params.nx] has unaligned access   [ d2q9-bgk.c(1474,61) ]
   remark #15389: vectorization support: reference tmp_cells->speed4[ii+jj*params.nx] has unaligned access   [ d2q9-bgk.c(1476,5) ]
   remark #15389: vectorization support: reference cells->speed4[ii+(jj+1)*params.nx] has unaligned access   [ d2q9-bgk.c(1476,44) ]
   remark #15389: vectorization support: reference cells->speed4[ii+(jj+1)*params.nx] has unaligned access   [ d2q9-bgk.c(1478,61) ]
   remark #15389: vectorization support: reference tmp_cells->speed5[ii+jj*params.nx] has unaligned access   [ d2q9-bgk.c(1480,5) ]
   remark #15388: vectorization support: reference cells->speed5[ii-1+(jj-1)*params.nx] has aligned access   [ d2q9-bgk.c(1480,44) ]
   remark #15388: vectorization support: reference cells->speed5[ii-1+(jj-1)*params.nx] has aligned access   [ d2q9-bgk.c(1482,61) ]
   remark #15389: vectorization support: reference tmp_cells->speed6[ii+jj*params.nx] has unaligned access   [ d2q9-bgk.c(1484,5) ]
   remark #15389: vectorization support: reference cells->speed6[ii+1+(jj-1)*params.nx] has unaligned access   [ d2q9-bgk.c(1484,44) ]
   remark #15389: vectorization support: reference cells->speed6[ii+1+(jj-1)*params.nx] has unaligned access   [ d2q9-bgk.c(1486,61) ]
   remark #15389: vectorization support: reference tmp_cells->speed7[ii+jj*params.nx] has unaligned access   [ d2q9-bgk.c(1488,5) ]
   remark #15389: vectorization support: reference cells->speed7[ii+1+(jj+1)*params.nx] has unaligned access   [ d2q9-bgk.c(1488,44) ]
   remark #15389: vectorization support: reference cells->speed7[ii+1+(jj+1)*params.nx] has unaligned access   [ d2q9-bgk.c(1490,61) ]
   remark #15389: vectorization support: reference tmp_cells->speed8[ii+jj*params.nx] has unaligned access   [ d2q9-bgk.c(1492,5) ]
   remark #15388: vectorization support: reference cells->speed8[ii-1+(jj+1)*params.nx] has aligned access   [ d2q9-bgk.c(1492,44) ]
   remark #15388: vectorization support: reference cells->speed8[ii-1+(jj+1)*params.nx] has aligned access   [ d2q9-bgk.c(1494,61) ]
   remark #15389: vectorization support: reference tmp_cells->speed0[ii+jj*params.nx] has unaligned access   [ d2q9-bgk.c(1366,5) ]
   remark #15389: vectorization support: reference tmp_cells->speed1[ii+jj*params.nx] has unaligned access   [ d2q9-bgk.c(1367,5) ]
   remark #15389: vectorization support: reference tmp_cells->speed2[ii+jj*params.nx] has unaligned access   [ d2q9-bgk.c(1368,5) ]
   remark #15389: vectorization support: reference tmp_cells->speed3[ii+jj*params.nx] has unaligned access   [ d2q9-bgk.c(1369,5) ]
   remark #15389: vectorization support: reference tmp_cells->speed4[ii+jj*params.nx] has unaligned access   [ d2q9-bgk.c(1370,5) ]
   remark #15389: vectorization support: reference tmp_cells->speed5[ii+jj*params.nx] has unaligned access   [ d2q9-bgk.c(1371,5) ]
   remark #15389: vectorization support: reference tmp_cells->speed6[ii+jj*params.nx] has unaligned access   [ d2q9-bgk.c(1372,5) ]
   remark #15389: vectorization support: reference tmp_cells->speed7[ii+jj*params.nx] has unaligned access   [ d2q9-bgk.c(1373,5) ]
   remark #15389: vectorization support: reference tmp_cells->speed8[ii+jj*params.nx] has unaligned access   [ d2q9-bgk.c(1374,5) ]
   remark #15389: vectorization support: reference tmp_cells->speed0[ii+jj*params.nx] has unaligned access   [ d2q9-bgk.c(1460,5) ]
   remark #15389: vectorization support: reference tmp_cells->speed1[ii+jj*params.nx] has unaligned access   [ d2q9-bgk.c(1464,5) ]
   remark #15389: vectorization support: reference tmp_cells->speed2[ii+jj*params.nx] has unaligned access   [ d2q9-bgk.c(1468,5) ]
   remark #15389: vectorization support: reference tmp_cells->speed3[ii+jj*params.nx] has unaligned access   [ d2q9-bgk.c(1472,5) ]
   remark #15389: vectorization support: reference tmp_cells->speed4[ii+jj*params.nx] has unaligned access   [ d2q9-bgk.c(1476,5) ]
   remark #15389: vectorization support: reference tmp_cells->speed5[ii+jj*params.nx] has unaligned access   [ d2q9-bgk.c(1480,5) ]
   remark #15389: vectorization support: reference tmp_cells->speed6[ii+jj*params.nx] has unaligned access   [ d2q9-bgk.c(1484,5) ]
   remark #15389: vectorization support: reference tmp_cells->speed7[ii+jj*params.nx] has unaligned access   [ d2q9-bgk.c(1488,5) ]
   remark #15389: vectorization support: reference tmp_cells->speed8[ii+jj*params.nx] has unaligned access   [ d2q9-bgk.c(1492,5) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 8
   remark #15309: vectorization support: normalized vectorization overhead 0.113
   remark #15301: SIMD LOOP WAS VECTORIZED
   remark #15448: unmasked aligned unit stride loads: 17 
   remark #15450: unmasked unaligned unit stride loads: 49 
   remark #15451: unmasked unaligned unit stride stores: 18 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 257 
   remark #15477: vector cost: 77.750 
   remark #15478: estimated potential speedup: 3.190 
   remark #15486: divides: 2 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at d2q9-bgk.c(1355,3)
<Remainder loop for vectorization>
LOOP END

LOOP BEGIN at d2q9-bgk.c(1585,5)
   remark #15389: vectorization support: reference d_equ[_2+5] has unaligned access
   remark #15389: vectorization support: reference u[_2+5] has unaligned access   [ d2q9-bgk.c(1585,44) ]
   remark #15389: vectorization support: reference u[_2+5] has unaligned access   [ d2q9-bgk.c(1586,42) ]
   remark #15389: vectorization support: reference u[_2+5] has unaligned access   [ d2q9-bgk.c(1586,49) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 4
   remark #15427: loop was completely unrolled
   remark #15309: vectorization support: normalized vectorization overhead 0.091
   remark #15301: MATERIALIZED LOOP WAS VECTORIZED
   remark #15450: unmasked unaligned unit stride loads: 3 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 23 
   remark #15477: vector cost: 5.500 
   remark #15478: estimated potential speedup: 3.830 
   remark #15488: --- end vector cost summary ---
LOOP END
===========================================================================

Begin optimization report for: calc_reynolds(const t_param, t_speed_soa *, int *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at d2q9-bgk.c(2930,3) inlined into d2q9-bgk.c(3252,10)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at d2q9-bgk.c(2932,5) inlined into d2q9-bgk.c(3252,10)
      remark #15388: vectorization support: reference cells->speed0[ii+jj*params.nx] has aligned access   [ d2q9-bgk.c(2940,26) ]
      remark #15388: vectorization support: reference cells->speed1[ii+jj*params.nx] has aligned access   [ d2q9-bgk.c(2941,26) ]
      remark #15388: vectorization support: reference cells->speed2[ii+jj*params.nx] has aligned access   [ d2q9-bgk.c(2942,26) ]
      remark #15388: vectorization support: reference cells->speed3[ii+jj*params.nx] has aligned access   [ d2q9-bgk.c(2943,26) ]
      remark #15388: vectorization support: reference cells->speed4[ii+jj*params.nx] has aligned access   [ d2q9-bgk.c(2944,26) ]
      remark #15388: vectorization support: reference cells->speed5[ii+jj*params.nx] has aligned access   [ d2q9-bgk.c(2945,26) ]
      remark #15388: vectorization support: reference cells->speed6[ii+jj*params.nx] has aligned access   [ d2q9-bgk.c(2946,26) ]
      remark #15388: vectorization support: reference cells->speed7[ii+jj*params.nx] has aligned access   [ d2q9-bgk.c(2947,26) ]
      remark #15388: vectorization support: reference cells->speed8[ii+jj*params.nx] has aligned access   [ d2q9-bgk.c(2948,26) ]
      remark #15388: vectorization support: reference cells->speed1[ii+jj*params.nx] has aligned access   [ d2q9-bgk.c(2951,22) ]
      remark #15388: vectorization support: reference cells->speed5[ii+jj*params.nx] has aligned access   [ d2q9-bgk.c(2952,25) ]
      remark #15388: vectorization support: reference cells->speed8[ii+jj*params.nx] has aligned access   [ d2q9-bgk.c(2953,25) ]
      remark #15388: vectorization support: reference cells->speed3[ii+jj*params.nx] has aligned access   [ d2q9-bgk.c(2954,26) ]
      remark #15388: vectorization support: reference cells->speed6[ii+jj*params.nx] has aligned access   [ d2q9-bgk.c(2955,28) ]
      remark #15388: vectorization support: reference cells->speed7[ii+jj*params.nx] has aligned access   [ d2q9-bgk.c(2956,28) ]
      remark #15388: vectorization support: reference cells->speed2[ii+jj*params.nx] has aligned access   [ d2q9-bgk.c(2959,22) ]
      remark #15388: vectorization support: reference cells->speed5[ii+jj*params.nx] has aligned access   [ d2q9-bgk.c(2960,25) ]
      remark #15388: vectorization support: reference cells->speed6[ii+jj*params.nx] has aligned access   [ d2q9-bgk.c(2961,25) ]
      remark #15388: vectorization support: reference cells->speed4[ii+jj*params.nx] has aligned access   [ d2q9-bgk.c(2962,26) ]
      remark #15388: vectorization support: reference cells->speed7[ii+jj*params.nx] has aligned access   [ d2q9-bgk.c(2963,28) ]
      remark #15388: vectorization support: reference cells->speed8[ii+jj*params.nx] has aligned access   [ d2q9-bgk.c(2964,28) ]
      remark #15305: vectorization support: vector length 8
      remark #15309: vectorization support: normalized vectorization overhead 0.047
      remark #15355: vectorization support: tot_u is float type reduction   [ d2q9-bgk.c(2905,3) ]
      remark #15355: vectorization support: tot_cells is int type reduction   [ d2q9-bgk.c(2901,20) ]
      remark #15300: LOOP WAS VECTORIZED
      remark #15450: unmasked unaligned unit stride loads: 1 
      remark #15454: masked aligned unit stride loads: 21 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 105 
      remark #15477: vector cost: 23.750 
      remark #15478: estimated potential speedup: 4.220 
      remark #15486: divides: 2 
      remark #15488: --- end vector cost summary ---
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: write_values(const t_param, t_speed_soa *, int *, float *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at d2q9-bgk.c(3290,3)
   remark #15382: vectorization support: call to function fprintf(FILE *__restrict__, const char *__restrict__, ...) cannot be vectorized   [ d2q9-bgk.c(3338,7) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed OUTPUT dependence between call:fprintf(FILE *__restrict__, const char *__restrict__, ...) (3338:7) and call:fprintf(FILE *__restrict__, const char *__restrict__, ...) (3338:7)
   remark #15346: vector dependence: assumed OUTPUT dependence between call:fprintf(FILE *__restrict__, const char *__restrict__, ...) (3338:7) and call:fprintf(FILE *__restrict__, const char *__restrict__, ...) (3338:7)

   LOOP BEGIN at d2q9-bgk.c(3292,5)
      remark #15382: vectorization support: call to function fprintf(FILE *__restrict__, const char *__restrict__, ...) cannot be vectorized   [ d2q9-bgk.c(3338,7) ]
      remark #15344: loop was not vectorized: vector dependence prevents vectorization
      remark #15346: vector dependence: assumed FLOW dependence between u_y (3297:15) and u_y (3338:7)
      remark #15346: vector dependence: assumed ANTI dependence between u_y (3338:7) and u_y (3297:15)
      remark #15346: vector dependence: assumed ANTI dependence between u_y (3338:7) and u_y (3297:15)
      remark #15346: vector dependence: assumed FLOW dependence between u_y (3297:15) and u_y (3338:7)
   LOOP END
LOOP END

LOOP BEGIN at d2q9-bgk.c(3351,3)
   remark #15527: loop was not vectorized: function call to fprintf(FILE *__restrict__, const char *__restrict__, ...) cannot be vectorized   [ d2q9-bgk.c(3353,5) ]
LOOP END
===========================================================================

Begin optimization report for: initialise(const char *, const char *, t_param *, t_speed_soa *, t_speed_soa *, int **, float **)

    Report from: Vector optimizations [vec]


LOOP BEGIN at d2q9-bgk.c(3117,3)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed OUTPUT dependence between cells_ptr->speed0[ii+jj*params->nx] (3125:7) and cells_ptr->speed8[ii+jj*params->nx] (3147:7)
   remark #15346: vector dependence: assumed OUTPUT dependence between cells_ptr->speed8[ii+jj*params->nx] (3147:7) and cells_ptr->speed0[ii+jj*params->nx] (3125:7)

   LOOP BEGIN at d2q9-bgk.c(3119,5)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization
      remark #15346: vector dependence: assumed OUTPUT dependence between cells_ptr->speed0[ii+jj*params->nx] (3125:7) and cells_ptr->speed8[ii+jj*params->nx] (3147:7)
      remark #15346: vector dependence: assumed OUTPUT dependence between cells_ptr->speed8[ii+jj*params->nx] (3147:7) and cells_ptr->speed0[ii+jj*params->nx] (3125:7)
   LOOP END
LOOP END

LOOP BEGIN at d2q9-bgk.c(3153,3)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at d2q9-bgk.c(3155,5)
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at d2q9-bgk.c(3155,5)
         remark #15389: vectorization support: reference obstacles_ptr has unaligned access   [ d2q9-bgk.c(3157,9) ]
         remark #15381: vectorization support: unaligned access used inside loop body
         remark #15305: vectorization support: vector length 8
         remark #15309: vectorization support: normalized vectorization overhead 0.600
         remark #15300: LOOP WAS VECTORIZED
         remark #15451: unmasked unaligned unit stride stores: 1 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 3 
         remark #15477: vector cost: 0.620 
         remark #15478: estimated potential speedup: 4.000 
         remark #15488: --- end vector cost summary ---
      LOOP END

      LOOP BEGIN at d2q9-bgk.c(3155,5)
      <Remainder loop for vectorization>
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at d2q9-bgk.c(3171,3)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END
===========================================================================
